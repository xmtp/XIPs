/**
 * Merges two lists and removes duplicates.  Order is NOT preserved.
 */
export declare function mergeListUnique(left: undefined, right: undefined): undefined;
export declare function mergeListUnique<T>(left: T[], right: T[]): T[];
export declare function mergeListUnique<T>(left: undefined, right: T[]): T[];
export declare function mergeListUnique<T>(left: T[], right: undefined): T[];
export declare function mergeListUnique<T>(left: T[] | undefined, right: T[] | undefined): T[] | undefined;
/**
 * Merges two lists.
 * Order is preserved.
 */
export declare function mergeList(left: undefined, right: undefined): undefined;
export declare function mergeList<T>(left: T[], right: T[]): T[];
export declare function mergeList<T>(left: undefined, right: T[]): T[];
export declare function mergeList<T>(left: T[], right: undefined): T[];
export declare function mergeList<T>(left: T[] | undefined, right: T[] | undefined): T[] | undefined;
export declare function stats(): {
    cacheMergeListUnique: Readonly<import("../util/AutoResolve.js").CacheStats>;
    cacheMergeLists: Readonly<import("../util/AutoResolve.js").CacheStats>;
};
//# sourceMappingURL=mergeList.d.ts.map